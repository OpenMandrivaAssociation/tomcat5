diff -Naurp tomcat5-5.5.28/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java
--- tomcat5-5.5.28/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java	2009-07-24 19:36:37.000000000 +0000
+++ tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java	2010-09-12 11:09:38.000000000 +0000
@@ -77,6 +77,11 @@ public class Http11AprProcessor implemen
     protected static StringManager sm =
         StringManager.getManager(Constants.Package);
 
+    /*
+     * Tracks how many internal filters are in the filter library so they
+     * are skipped when looking for pluggable filters.
+     */
+    private int pluggableFilterIndex = Integer.MAX_VALUE;
 
     // ----------------------------------------------------------- Constructors
 
@@ -1690,6 +1695,8 @@ public class Http11AprProcessor implemen
         //inputBuffer.addFilter(new GzipInputFilter());
         outputBuffer.addFilter(new GzipOutputFilter());
 
+        pluggableFilterIndex = inputBuffer.filterLibrary.length;
+
     }
 
 
@@ -1708,7 +1715,7 @@ public class Http11AprProcessor implemen
                 (inputFilters[Constants.CHUNKED_FILTER]);
             contentDelimitation = true;
         } else {
-            for (int i = 2; i < inputFilters.length; i++) {
+            for (int i = pluggableFilterIndex; i < inputFilters.length; i++) {
                 if (inputFilters[i].getEncodingName()
                     .toString().equals(encodingName)) {
                     inputBuffer.addActiveFilter(inputFilters[i]);
diff -Naurp tomcat5-5.5.28/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java
--- tomcat5-5.5.28/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java	2009-07-24 19:36:37.000000000 +0000
+++ tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java	2010-09-12 11:09:38.000000000 +0000
@@ -78,6 +78,11 @@ public class Http11Processor implements
     protected static StringManager sm =
         StringManager.getManager(Constants.Package);
 
+    /*
+     * Tracks how many internal filters are in the filter library so they
+     * are skipped when looking for pluggable filters.
+     */
+    private int pluggableFilterIndex = Integer.MAX_VALUE;
 
     // ----------------------------------------------------------- Constructors
 
@@ -1655,6 +1660,8 @@ public class Http11Processor implements
         //inputBuffer.addFilter(new GzipInputFilter());
         outputBuffer.addFilter(new GzipOutputFilter());
 
+        pluggableFilterIndex = inputBuffer.filterLibrary.length;
+
     }
 
 
@@ -1673,7 +1680,7 @@ public class Http11Processor implements
                 (inputFilters[Constants.CHUNKED_FILTER]);
             contentDelimitation = true;
         } else {
-            for (int i = 2; i < inputFilters.length; i++) {
+            for (int i = pluggableFilterIndex; i < inputFilters.length; i++) {
                 if (inputFilters[i].getEncodingName()
                     .toString().equals(encodingName)) {
                     inputBuffer.addActiveFilter(inputFilters[i]);
diff -Naurp tomcat5-5.5.28/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java
--- tomcat5-5.5.28/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java	2009-07-24 19:36:37.000000000 +0000
+++ tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java	2010-09-12 11:09:38.000000000 +0000
@@ -102,11 +102,14 @@ public class BufferedInputFilter impleme
     }
 
     public void recycle() {
+       if(buffered != null)
+       {
         if (buffered.getBuffer().length > 65536) {
             buffered = null;
         } else {
             buffered.recycle();
         }
+       }
         tempRead.recycle();
         hasRead = false;
         buffer = null;
diff -Naurp tomcat5-5.5.28/apache-tomcat-5.5.28-src/container/webapps/docs/changelog.xml tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/container/webapps/docs/changelog.xml
--- tomcat5-5.5.28/apache-tomcat-5.5.28-src/container/webapps/docs/changelog.xml	2009-07-24 19:36:59.000000000 +0000
+++ tomcat5-5.5.28.oden/apache-tomcat-5.5.28-src/container/webapps/docs/changelog.xml	2010-09-12 11:09:38.000000000 +0000
@@ -1145,6 +1145,9 @@
   </subsection>
   <subsection name="Coyote">
     <changelog>
+      <fix> Arrange filter log (jfclere)
+           CVE-2010-2227 patch
+      </fix>
       <fix>
         Requests with multiple content-length headers are now rejected. (markt)
       </fix>
